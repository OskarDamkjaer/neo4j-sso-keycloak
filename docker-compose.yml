version: '3.9'
services:
    neo4j:
        image: neo4j:${NEO4J_VERSION}
        ports:
            - "7474:7474"
            - "7687:7687"
        environment:
            - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
            - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password}
            - NEO4J_dbms_security_authentication__providers=oidc-keycloak,native
            - NEO4J_dbms_security_authorization__providers=oidc-keycloak,native
            - NEO4J_dbms_security_oidc_keycloak_display__name=Keycloak
            - NEO4J_dbms_security_oidc_keycloak_.auth__flow=pkce
            # If you provide the well_known_discovery_uri config, Keycloak has to be up and running and 
            # available when Neo4j starts
            # Removing the config and providing manually the auth_endpoint, token_endpoint and jwks_uri removes that limitation
            # - NEO4J_dbms_security_oidc_keycloak_well__known__discovery__uri=https://keycloak:8080/realms/my-realm/.well-known/openid-configuration
            # Additionnally, using 127.0.0.1 as public url for the user is necessary since the Neo4j browser sends 
            # sentry headers which are not accepted by Keycloak for CORS requests
            - NEO4J_dbms_security_oidc_keycloak_auth__endpoint=https://127.0.0.1:8443/realms/my-realm/protocol/openid-connect/auth
            - NEO4J_dbms_security_oidc_keycloak_token__endpoint=https://127.0.0.1:8443/realms/my-realm/protocol/openid-connect/token
            - NEO4J_dbms_security_oidc_keycloak_jwks__uri=https://${LOCAL_DEV_HOST}:8443/realms/my-realm/protocol/openid-connect/certs
            - NEO4J_dbms_security_oidc_keycloak_params=client_id=neo4j-sso;response_type=code;scope=openid email roles
            - NEO4J_dbms_security_oidc_keycloak_audience=account
            - NEO4J_dbms_security_oidc_keycloak_issuer=https://127.0.0.1:8443/realms/my-realm
            - NEO4J_dbms_security_oidc_keycloak_client__id=neo4j-sso
            - NEO4J_dbms_security_oidc_keycloak_claims_username=preferred_username
            - NEO4J_dbms_security_oidc_keycloak_claims_groups=roles
            - NEO4J_browser_allow__outgoing__connections=false
        volumes:
            - "neo4j_data:/data"
            - "./certificates/cacerts.neo4j:/opt/java/openjdk/lib/security/cacerts"
        extra_hosts:
            - "${LOCAL_DEV_HOST}:host-gateway"
        healthcheck:
            test: wget http://localhost:7474 || exit 1
            interval: 5s
            timeout: 5s
            retries: 3
        depends_on:
            keycloak:
                condition: service_healthy
    neo4j-config-cli:
        image: graphaware/neo4j-config-cli:2.6.0
        environment:
            - NEO4J_USER=neo4j
            - NEO4J_PASSWORD=password
            - NEO4J_URI=bolt://neo4j:7687
            - IMPORT_PATH=/config
        volumes:
            - "./resources/neo4j-config:/config"
        depends_on:
            neo4j:
                condition: service_healthy

    keycloak:
        image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
        environment:
            - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER}
            - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
            - KC_DB_URL=jdbc:postgresql://postgres/keycloak
            - KC_HOSTNAME=127.0.0.1
            - KC_DB_USERNAME=keycloak
            - KC_DB_PASSWORD=password
            - KC_HEALTH_ENABLED=true
            - KC_METRICS_ENABLED=true
            - KC_HTTP_ENABLED=true
        command: start --https-certificate-file=/certs/${LOCAL_DEV_HOST}.pem --https-certificate-key-file=/certs/${LOCAL_DEV_HOST}-key.pem
        ports:
            - "8180:8080"
            - "8443:8443"
        healthcheck:
            test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
            interval: 5s
            timeout: 5s
            retries: 10
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - "./certificates:/certs"

    postgres:
        image: postgres:14-alpine
        environment:
            POSTGRES_DB: keycloak
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: password
        command: -p 5432
        expose:
            - "5433" # Publishes 5433 to other containers but NOT to host machine
        volumes:
            - "./keycloak_data:/var/lib/postgresql/data"
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'psql -U keycloak -d keycloak'"]
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 5s

    keycloak-config:
        image: adorsys/keycloak-config-cli:latest
        environment:
            - KEYCLOAK_URL=https://${LOCAL_DEV_HOST}:8443
            - KEYCLOAK_USER=admin
            - KEYCLOAK_PASSWORD=admin123
            - KEYCLOAK_AVAILABILITYCHECK_ENABLED=true
            - KEYCLOAK_AVAILABILITYCHECK_TIMEOUT=60s
            - IMPORT_PATH=/config
            - KEYCLOAK_SSL_VERIFY=false
        volumes:
            - ./resources/keycloak-config:/config
        extra_hosts:
            - "${LOCAL_DEV_HOST}:host-gateway"
        depends_on:
            keycloak:
                condition: service_healthy

volumes:
    neo4j_data:
    keycloak_data:
      